{"version":3,"sources":["components/Event.js","components/EventList.js","mock-events.js","api.js","components/CitySearch.js","components/NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","collapsed","handleClick","_this","setState","event","this","props","react_default","a","createElement","className","local_time","local_date","name","group","yes_rsvp_count","onClick","Component","EventList","events","map","key","id","components_Event","mockEvents","city","lat","lon","country","zip","member_count","created","duration","rsvp_limit","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","venue","repinned","address_1","localized_country_name","join_mode","urlname","who","localized_location","region","timezone","link","description","visibility","pro_is_email_shared","getSuggestions","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","url","result","wrap","_context","prev","next","window","location","href","startsWith","abrupt","name_string","getAccessToken","sent","axios","get","data","stop","_x","apply","arguments","_callee3","_context3","getOrRenewAccessToken","_ref2","_callee2","type","tokenInfo","_context2","concat","localStorage","setItem","access_token","refresh_token","Date","now","_x4","_x5","accessToken","getItem","searchParams","URLSearchParams","search","console","log","code","lastSavedTime","refreshToken","CitySearch","suggestions","handleChange","e","target","value","then","updateEvents","_this2","onChange","item","NumberOfEvents","App","_x2","_x3","_getEvents","getEvents","components_CitySearch","components_NumberOfEvents","components_EventList","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af7da473.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    collapsed: false,\n  }\n\n\n  handleClick = () => {\n    this.setState({collapsed: true })\n  }\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n\n    return(\n      <div className=\"Event\">\n        <div>{event.local_time} - {event.local_date}</div>\n        <div className=\"name\">{event.name}</div>\n        <div className=\"group-name\">{event.group.name}</div>\n        <div className=\"going\">\n          {event.yes_rsvp_count} people are going\n        </div>\n        <button\n        className=\"details-btn\"\n          onClick={this.handleClick}\n        >Details</button>\n\n        <div className={collapsed ? \"Details\" : \"\"}>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    return(\n      <ul className=\"EventList\">\n        {\n          this.props.events.map(event =>\n            <li key={event.id}>\n              <Event event={event} />\n            </li>\n          )\n        }\n      </ul>\n    )\n  }\n}\n\nexport default EventList;\n","export const mockEvents = {\n  city: {\n    id: 1007700,\n    city: 'MÃ¼nchen',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257,\n  },\n  events: [\n    {\n      created: 1559555943000,\n      duration: 10800000,\n      id: '261997882',\n      name: 'AWS UG July Event',\n      rsvp_limit: 180,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1562776200000,\n      local_date: '2019-07-10',\n      local_time: '18:30',\n      updated: 1561712484000,\n      utc_offset: 7200000,\n      waitlist_count: 47,\n      yes_rsvp_count: 180,\n      venue: {\n        id: 26431070,\n        name: 'Cloudreach GmbH',\n        lat: 48.143680572509766,\n        lon: 11.502440452575684,\n        repinned: true,\n        address_1: 'Landsberger Str. 300',\n        city: 'MÃ¼nchen',\n        country: 'de',\n        localized_country_name: 'Germany',\n      },\n      group: {\n        created: 1400514197000,\n        name: 'Munich AWS User Group',\n        id: 14546712,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'AWS-Munich',\n        who: 'Members',\n        localized_location: 'MÃ¼nchen, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/AWS-Munich/events/261997882/',\n      description: '<p>It is our last meetup before summer break and I\\'m so glad we really changed location every month until now for this year!</p> <p>This time Cloudreach (<a href=\"https://www.cloudreach.com/\" class=\"linkified\">https://www.cloudreach.com/</a>) is our sponsor and kind enough to provide food, drinks and a few amazing talks!</p> <p>AGENDA:<br/>18:30 - Doors open, networking, drinks, food</p> <p>19:00 - Markus (Team Internet AG) - Recent AWS announcements</p> <p>19:30 - Cloudreach - Scaling Out AWS Config<br/>Is AWS Config the answer for your Security Compliance?<br/>How to detect the unexpected and audit your teams resource usage in a multi account setup.<br/>From August on there will be a new pricing model for AWS Config, what does it mean &amp; what will be changed in upcoming new pricing model.</p> <p>20:00 - Cloudreach - Now that is built, how do you run it?<br/>First hand experience from our operations team working with AWS.<br/>What challenges they have encountered and how to overcome them, as part of organisations who\\'s applications are Cloud based.</p> <p>20:30 - Cloudreach - Serverless Chrome for Work and Fun<br/>Headless Chrome brings a lot of possibilities for functional and UI application testing, as well as for various other automation tasks. But can we save some money and run it in AWS Lambda? How it all works together? What languages you can use?</p> <p>20:45 - More drinks, more networking</p> <p>If you have an office or coworking space where we can meet [masked] people), want to sponsor drinks/food or have a (lightning) talk you want to present - please let us know!</p> ',\n      visibility: 'public',\n    },\n    {\n      created: 1561033244000,\n      duration: 7200000,\n      id: '262475607',\n      name: 'Massive Parallel and Elastic AI Pipelines with TensorFlow and Kubernetes',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1562859000000,\n      local_date: '2019-07-11',\n      local_time: '17:30',\n      updated: 1562134663000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 115,\n      group: {\n        created: 1400181332000,\n        name: 'Big Data Developers in Munich',\n        id: 14476282,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Big-Data-Developers-in-Munich',\n        who: 'Members',\n        localized_location: 'MÃ¼nchen, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/Big-Data-Developers-in-Munich/events/262475607/',\n      description: '<p>Agenda:</p> <p>17:30 Welcome and Pizza<br/>18:00 What\\'s new in TensorFlow 2.0<br/>18:30 Build Enterprise AI Pipelines using KubeFlow</p> <p>Meetup taking part with our friends from PyData, please take a look, they have very interesting talks as well</p> <p><a href=\"https://www.meetup.com/PyData-Munchen/events/262530441\" class=\"linkified\">https://www.meetup.com/PyData-Munchen/events/262530441</a></p> ',\n      visibility: 'public',\n      pro_is_email_shared: false,\n    },\n    {\n      created: 1561302363000,\n      duration: 7200000,\n      id: '262555199',\n      name: 'DDD - Lessons Learned',\n      rsvp_limit: 150,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1562691600000,\n      local_date: '2019-07-09',\n      local_time: '19:00',\n      updated: 1561302363000,\n      utc_offset: 7200000,\n      waitlist_count: 57,\n      yes_rsvp_count: 150,\n      venue: {\n        id: 26052903,\n        name: 'Rohde & Schwarz GmbH & Co. KG',\n        lat: 48.127593994140625,\n        lon: 11.612282752990723,\n        repinned: false,\n        address_1: 'MÃ¼hldorfstraÃe 15',\n        city: 'MÃ¼nchen',\n        country: 'de',\n        localized_country_name: 'Germany',\n      },\n      group: {\n        created: 1399578043000,\n        name: 'Microservices Meetup Munich',\n        id: 14341692,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Microservices-Meetup-Munich',\n        who: 'Members',\n        localized_location: 'MÃ¼nchen, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/Microservices-Meetup-Munich/events/262555199/',\n      description: '<p>Please keep your RSVP up to date, free spots are always in demand!</p> <p>We will meet at 6.30pm at Rohde &amp; Schwarz Technology Center with pizza and drinks.</p> <p>The talk starts at 7pm and will be in English.</p> <p>Dr. Baris Guezelarslan: DDD - Lessons Learned</p> <p>After the talk we have time for drinks and conversations.</p> <p>Abstract:<br/>This talk describes the speaker\\'s path from a monolith towards a service-based application. It is a potpourri of all the light bulb moments on this journey including actor models, event sourcing, CQRS, functional programming, polyglot persistence, and workflow engines.</p> <p>This talk will cover the problem domain, which is an enterprise application processing data streams from different sensors (IoTs), without going into too much detail. Due to performance issues, the content will be based on event sourcing and CQRS which is often considered too complex (for no reason). It will be shown that the basic idea and the implementation can be very simple. The split of the write and the read model will also help to separate behavior from data. The main focus will not be based on technical implementations, but on how to change your mindset to solve your problem.</p> <p>Bio:<br/>Baris is currently working in the Innovation Lab at Rohde &amp; Schwarz. Previously, he was responsible for a high-throughput backend. He is a DDD thinker and tinker. He still feels like an apprentice on DDD and continues to learn more on this topic. Accordingly, he is looking forward to discuss his experiences with you in order to get constructive feedback.</p> <p>Location:<br/>Entrance is at the gate of Rohde &amp; Schwarz at MÃ¼hldorfstr. 15 (at the pedestrian crossing). From there we will bring you to the Rohde &amp; Schwarz Technology Center.</p> ',\n      visibility: 'public',\n    },\n    {\n      created: 1548927356000,\n      duration: 10800000,\n      id: '258555146',\n      name: 'Design Thinking Method Jam',\n      rsvp_limit: 40,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1562776200000,\n      local_date: '2019-07-10',\n      local_time: '18:30',\n      updated: 1561739161000,\n      utc_offset: 7200000,\n      waitlist_count: 8,\n      yes_rsvp_count: 56,\n      venue: {\n        id: 26483775,\n        name: 'Celonis SE',\n        lat: 48.147335052490234,\n        lon: 11.578679084777832,\n        repinned: true,\n        address_1: 'TheresienstraÃe 6',\n        city: 'MÃ¼nchen',\n        country: 'de',\n        localized_country_name: 'Germany',\n      },\n      group: {\n        created: 1460553553000,\n        name: 'Design Thinking MÃ¼nchen',\n        id: 19836170,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'DT-Muc',\n        who: 'Design Thinkers',\n        localized_location: 'MÃ¼nchen, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/DT-Muc/events/258555146/',\n      description: '<p>DESIGN THINKING METHOD JAM</p> <p>Wir alle arbeiten gern mit Design Thinking Methoden, die wir gut kennen und schon oft gemacht haben. Oder wir wandeln Methoden um oder ab, weil sie so besser oder fÃ¼r einen anderen Zweck funktionieren. Bei diesem Meet-Up geht es darum, Ã¼ber den eigenen Methoden-Tellerrand zu schauen und neue Methoden kennenzulernen und auszuprobieren.<br/>Der Method Jam ist ein bewÃ¤hrtes Format an der HPI School of Design Thinking, um den Methodenaustausch und Weiterentwicklung unter den Coaches zu institutionalisieren und voneinander zu lernen. AuÃerdem bietet er die MÃ¶glichkeit, neue Methoden risikofrei und mit viel SpaÃ auszuprobieren und Feedback zu sammeln.</p> <p>Alle Teilnehmer*innen werden gebeten eine Methode mitzubringen/vorzubereiten, die sie in 30 Minuten mit einem Team von 5-7 Personen vorstellen, ausprobieren und reflektieren kÃ¶nnen.<br/>Jede*r Teilnehmer*in hat die MÃ¶glichkeit, seine/ihre Methode zu Beginn in einer Minute vorzustellen. Danach wÃ¤hlen die Teilnehmer*innen aus, welche 4-5 Methoden dann in Kleingruppen ausprobiert werden sollen. In einer zweiten Runde werden weitere Methoden ausprobiert, so dass auch die Moderator*innen der ersten Runde Gelegenheit haben, eine neue Methode zu erlernen. Im Anschluss werden im Plenum alle Methoden kurz prÃ¤sentiert und reflektiert.</p> <p>Dieses Meet-Up benÃ¶tigt etwas Vorbereitung. Bitte bringt eine Methode mit und macht Euch vorab Gedanken Ã¼ber folgende Fragen:</p> <p>- Titel der Methode<br/>- Ziel und Zielgruppe<br/>- Wo im DT-Prozess wird sie angewendet? (Warm-Up, Ideation, Transfer, etc.)<br/>- Kurze Skizze wie es funktioniert<br/>- AHA-Moment/ warum ist sie so toll?</p> <p>Wichtig ist es, die Methode nicht nur vorzustellen, sondern sie gemeinsam mit den anderen Teilnehmer*innen auszuprobieren. Post-Its, Papier und Stifte stellen wir zur VerfÃ¼gung, anderes Material und Templates bitte mitbringen falls notwendig.</p> <p>AGENDA:</p> <p>18:30: Ankommen &amp; Kennenlernen, Methoden-Pitch vorbereiten<br/>19:00: Methoden-Pitches &amp; Voting (1min/ Methode)<br/>19:45: Method Jamming (2 Runden Ã  4-5 Methoden in Kleingruppen parallel)<br/>21:00: Method Gallery (Vorstellung aller Methoden im Plenum)<br/>21:30: Ende</p> <p>Wir freuen uns riesig, Jule SchrÃ¶der als Co-Organisatorin bei diesem Meetup dabei zu haben!</p> <p>Jule SchrÃ¶der hat 2013/14 den Basic und Advanced Track an der HPI School of Design Thinking in Potsdam absolviert und im Anschluss als Innovations- und Design Thinking Coach bei Kill Your Darling und and der HPI Academy GmbH in unzÃ¤hligen Workshops Design Thinking als Methode unterrichtet sowie Innovationsprozesse moderiert und begleitet. Mit ihrem Integrationsprojekt âKitchen on the Runâ gewann sie 2015 die Advocate Europe Idea Challenge. Seit 2018 begleitet sie selbststÃ¤ndig Innovationsprojekte vor allem in der Pharma-Industrie und im Kulturbereich.</p> ',\n      visibility: 'public',\n    }\n\n  ],\n}\n\n","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nexport const getSuggestions = async (query) => {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n    + query\n    + '&access_token='+ token;\n\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n};\n\nexport async function getEvents(lat, lon) {\n\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    const result = await axios.get(url);\n    return result.data.events;\n  }\n\n}\n\n\n\nconst getOrRenewAccessToken = async (type, key) => {\n  let url;\n  if (type === 'get') {\n    url = `https://2bpftkaveh.execute-api.eu-central-1.amazonaws.com/dev/api/token/${key}`;\n  } else if (type === 'renew') {\n    url = `https://2bpftkaveh.execute-api.eu-central-1.amazonaws.com/dev/api/token/refresh/${key}`;\n  }\n\n  const tokenInfo = await axios.get(url);\n\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  return tokenInfo.data.access_token;\n}\n\nexport const getAccessToken = () => {\n  const accessToken = localStorage.getItem('access_token');\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    console.log(window.location.search);\n    const code = searchParams.get('code');\n\n    if(!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=dctr036lji26j6sd8730j2u7fk&response_type=code&redirect_uri=https://getmouth.github.io/meetup/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n}\n\n\n","import React, { Component } from 'react';\nimport { getSuggestions } from '../api';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: []\n  }\n\n  handleChange = (e) => {\n    const query = e.target.value;\n    this.setState({ query })\n    getSuggestions(query)\n      .then(suggestions => this.setState({suggestions}))\n  }\n\n  handleClick = (query, lat, lon) => {\n    this.setState({ query ,suggestions: []});\n    this.props.updateEvents(lat, lon);\n  }\n  render() {\n    const { suggestions } = this.state;\n\n    return(\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleChange}\n        />\n        <ul className=\"suggestions\">\n          {\n            suggestions.map(item =>\n              <li key={item.name_string}\n                onClick={() => this.handleClick(item.name_string, item.lat, item.lon)}\n              >\n                {item.name_string}\n              </li>\n            )\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n  render() {\n\n    return(\n      <div className=\".number-of-events\">\n        <input\n          type=\"number\"\n          className=\"totalEvents\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { getEvents } from './api';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    events: [],\n  }\n\n  updateEvents = (lat, lon) => {\n    getEvents(lat, lon).then(events => this.setState({ events }))\n  }\n  render() {\n    const { events } = this.state;\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={events} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}